import pandas as ps

class math:

  def __init__(self, data):
  
    self.data = data #[N,N]
    self.rsi_nodes = []
    
  def rsi(price_open, price_close):
    gains = []
    losses = []
    window = 13
    
    if price_close > price_open:
      gains.append(price_close - price_open)
      
    elif price_close < price_open:
      losses.append(price_close - price_open)
    
  def create_md_array_shell(window_length, len_array):
  
    array_shell = []
    whole_windows = len_array // window_length
    window_remainder = len_array % window_length
    total_arrays = whole_windows + window_remainder
    
    for n in range(1,total_arrays):
      array_shell.append([])
      
    return array_shell
  
  def 2d_array_filter(window, array):
      array_shell = creat_md_array_shell(window, len(array))
     
         for array in array_shell:
              for i in array:     
              
                try:
                  array.pop(i)
                except:
                  timer = False
    
  def data_hopper(data):
  
    for dict in data:
      for prices in data:
        
